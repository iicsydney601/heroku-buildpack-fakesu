#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
set -e

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
FAKECHROOT_BUILD="$(mktmpdir fakechroot)"
AUTOCONF_BUILD="$(mktmpdir autoconf)"
AUTOMAKE_BUILD="$(mktmpdir automake)"
LIBTOOL_BUILD="$(mktmpdir libtool)"

mkdir -p $BUILD_DIR/.tools/fakechroot
mkdir -p $BUILD_DIR/.tools/autoconf
mkdir -p $BUILD_DIR/.tools/automake
mkdir -p $BUILD_DIR/.tools/libtool
mkdir -p $CACHE_DIR/.tools/{wget,debootstrap}

export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin:$BUILD_DIR/.tools/autoconf/bin:$BUILD_DIR/.tools/automake/bin:$BUILD_DIR/.tools/libtool/share
export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap

echo "-----> Fetching and installing wget"
cd $WGET_BUILD
curl -O http://ftp.gnu.org/gnu/wget/wget-1.13.4.tar.bz2 
tar jxvf wget-1.13.4.tar.bz2 
cd wget-1.13.4
./configure --prefix=$CACHE_DIR/.tools/wget --without-ssl 
make > /dev/null
make install > /dev/null
echo "wget installed" | indent

echo "-----> Fetching and installing debootstrap"
cd $DEBOOTSTRAP_BUILD
wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_1.0.53.tar.gz 
tar zxvf debootstrap_1.0.53.tar.gz 
cd debootstrap-1.0.53
DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make 
DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make install 
echo "debootstrap installed" | indent

echo "----->Fetching, installing autoconf "
cd $AUTOCONF_BUILD
wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.gz
gzip -dc < autoconf-2.64.tar.gz | tar -xf -
cd autoconf-2.64
./configure --prefix=$BUILD_DIR/.tools/autoconf
make >/dev/null
make install >/dev/null 
echo "autoconf installed" | indent

echo "----->Fetching, installing automake "
cd $AUTOMAKE_BUILD
wget http://ftp.gnu.org/gnu/automake/automake-1.11.tar.gz
gzip -dc < automake-1.11.tar.gz | tar -xf -
cd automake-1.11
./configure --prefix=$BUILD_DIR/.tools/automake 
make > /dev/null 
make install >/dev/null
echo "automake installed" | indent 

echo "----->Fetching, installing libtool "
cd $LIBTOOL_BUILD
wget http://ftp.gnu.org/gnu/libtool/libtool-2.2.6a.tar.gz
gzip -dc < libtool-2.2.6a.tar.gz | tar -xf -
cd libtool-2.2.6
./configure --prefix=$BUILD_DIR/.tools/libtool
make 
make install 
echo "libtool installed" | indent 

echo "-----> Fetching, installing and vendoring fakechroot into /app/.tools/fakechroot/"
cd $FAKECHROOT_BUILD
git clone git://github.com/fabiokung/fakechroot.git 
cd fakechroot
./autogen.sh 
./configure --prefix=$BUILD_DIR/.tools/fakechroot 
make 
make install 
echo "fakechroot vendored" | indent

cd $BUILDPACK_DIR
echo "-----> Bootstraping a new base ubuntu lucid into /app/.root/"
mkdir -p $BUILD_DIR/.root
fakechroot -s fakeroot debootstrap --no-check-gpg --variant=fakechroot lucid $BUILD_DIR/.root 
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get install -y --force-yes gpgv 
echo "/app/.root bootstraped" | indent

sed -i -e "s/#force_color_prompt=yes/force_color_prompt=yes/" $BUILD_DIR/.root/root/.bashrc
echo "export PATH=/sbin:/usr/sbin:\$PATH" >> $BUILD_DIR/.root/root/.bashrc
echo "cd $HOME" >> $BUILD_DIR/.root/root/.bashrc

echo "-----> Updating packages"
fakechroot fakeroot chroot $BUILD_DIR/.root bash -c "cat > /etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu lucid main universe
deb http://archive.ubuntu.com/ubuntu lucid-security main
deb http://archive.ubuntu.com/ubuntu lucid-updates main
EOF"
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get update 
echo "packages updated" | indent

cd $BUILD_DIR/.root
ln -s ../ app

mkdir -p $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/fakesu $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/aws $BUILD_DIR/bin

exit 0

